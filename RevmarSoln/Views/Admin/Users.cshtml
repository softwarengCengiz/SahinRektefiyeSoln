@model IEnumerable<SahinRektefiyeSoln.Models.Users>

@{
	ViewBag.Title = "Kullanıcılar";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Action("SetPageHeader", "Admin", new { pageTitle = "Kullanıcılar", pagePermission = "ADM_00" })
<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.flash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.print.min.js"></script>

<script>
    $(document).ready(function () {

		jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            'locale-compare-asc': function (a, b) {
                return a.localeCompare(b, 'cs', { sensitivity: 'case' })
            },
            'locale-compare-desc': function (a, b) {
                return b.localeCompare(a, 'cs', { sensitivity: 'case' })
            }
        })

        jQuery.fn.dataTable.ext.type.search['locale-compare'] = function (data) {
            return NeutralizeAccent(data);
        }

        function NeutralizeAccent(data) {
            return !data
                ? ''
                : typeof data === 'string'
                    ? data
                        .replace(/\n/g, ' ')
                        .replace(/[éÉěĚèêëÈÊË]/g, 'e')
                        .replace(/[šŠ]/g, 's')
                        .replace(/[čČ]/g, 'c')
                        .replace(/[řŘ]/g, 'r')
                        .replace(/[žŽ]/g, 'z')
                        .replace(/[ýÝ]/g, 'y')
                        .replace(/[áÁâàÂÀ]/g, 'a')
                        .replace(/[íÍîïÎİÏ]/g, 'i')
                        .replace(/[ťŤ]/g, 't')
                        .replace(/[ďĎ]/g, 'd')
                        .replace(/[ňŇ]/g, 'n')
                        .replace(/[óÓ]/g, 'o')
                        .replace(/[úÚůŮ]/g, 'u')
                    : data
        }

		$('#dtUsers').DataTable({
			dom: 'Bfrtip',
			buttons: [
				{
					text: 'Hepsini Seç',
					action: function (e, dt, node, config) {
						//alert('Button activated');

						var boxes = $('.selectOrderHeader');

						boxes.each(function (index) {
							$(this)[0].checked = true;

						});
					},
					className: ''
				},
				{
					text: 'Seçimleri Kaldır',
					action: function (e, dt, node, config) {
						//alert('Button activated');

						var boxes = $('.selectOrderHeader');

						boxes.each(function (index) {
							$(this)[0].checked = false;

						});
					},
					className: ''
				},
				'excelHtml5',
				'pdfHtml5'

			],
			"processing": true,
			"filter": true,
			"language": {
				"sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
				"oPaginate": { "sFirst": "İlk", "sLast": "Son", "sNext": "İleri", "sPrevious": "Geri" },
				"select": { "rows": { "_": "%d kayıt seçildi", "0": "", "1": "1 kayıt seçildi" } },
				"sSearch": "",
				"selectAll": "Tümünü Seç",
				"sSearchPlaceholder": "Hızlı Ara",
				"sLengthMenu": "_MENU_",
				"sLoadingRecords": "Yükleniyor...",
				"sProcessing": "İşleniyor...",
				"sZeroRecords": "Eşleşen kayıt bulunamadı...",
				"sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar.",
				"sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
				"sInfoEmpty": "Kayıt Yok",
				"sInfoPostFix": "",
				"sInfoThousands": ".",
				"sDecimal": ","
			},
            columnDefs : [
							 { targets: 0, type: 'locale-compare' },
						  ]
        });

		$("input[type='search']").keyup(function () {
            table.search(
                jQuery.fn.dataTable.ext.type.search.string(NeutralizeAccent(this.value))
            )
                .draw()

        });



		var btns = $('.dt-buttons')[0];

		btns.firstElementChild.className = "w3-btn w3-blue w3-round";
		btns.firstElementChild.textContent = "Hepsini Seç";

		btns.firstElementChild.nextElementSibling.className = "w3-btn w3-blue w3-round";
		btns.firstElementChild.nextElementSibling.textContent = "Seçimleri Kaldır";

		btns.firstElementChild.nextElementSibling.nextElementSibling.className = "w3-btn w3-blue w3-round";
		btns.firstElementChild.nextElementSibling.nextElementSibling.textContent = "Excel'e Aktar";

		btns.firstElementChild.nextElementSibling.nextElementSibling.nextElementSibling.className = "w3-btn w3-blue w3-round";
		btns.firstElementChild.nextElementSibling.nextElementSibling.nextElementSibling.textContent = "Pdf'e Aktar";
	});
</script>

<div class="w3-panel">
	<div class="w3-row-padding w3-card">
		<div class="w3-row w3-margin-top">
			<a href="/Admin/CreateUser" class="w3-btn w3-ripple w3-green"><i class="fa fa-industry fa-fw"></i>&nbsp;Kullanıcı Ekle </a>
		</div>
		<div class="w3-row w3-margin-top">
			<table class="w3-table-all w3-margin-top w3-margin-bottom" id="dtUsers">
				<thead>
					<tr>
						<th>
							Kullanıcı Adı
						</th>
						<th>
							Adı
						</th>
						<th>
							Soyadı
						</th>
						<th style="width:150px!important;">
							Telefon
						</th>
						<th>Rol</th>
						<th>Oluşturma Tarihi</th>
						<th>Oluşturan Kullanıcı</th>
						<th></th>
						<th></th>
						<th></th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model)
					{

						<tr>
							<td>
								@Html.DisplayFor(modelItem => item.UserName)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.FirstName)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.SurName)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.PhoneNumber)
							</td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserRoles.FirstOrDefault().Roles.RoleName)
                            </td>
							<td>
								@Convert.ToDateTime(item.CreatedDate).ToShortDateString()
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Creator)
							</td>

							<td>
								<a href="/Admin/User?UserName=@item.UserName" class="w3-btn w3-ripple w3-blue"><i class="fa fa-cop"></i>&nbsp;Düzenle </a>


							</td>
							<td>
								<a href="/Admin/RefreshMenuForUser?UserName=@item.UserName" class="w3-btn w3-ripple w3-yellow"><i class="fa fa-refresh "></i>&nbsp;Menü Güncelle</a>
							</td>
							<td>
								<a href="/Admin/ResetUserPass?UserName=@item.UserName" class="w3-btn w3-ripple w3-yellow"><i class="fa fa-refresh "></i>&nbsp;Şifre Resetle </a>
							</td>
							<td>
								<a href="/Admin/DeleteUser?UserName=@item.UserName" class="w3-btn w3-ripple w3-red" onclick="if (!confirm('Silmek istediğinizden emin misiniz?')) return false;"><i class="fa fa-trash-o"></i>&nbsp;Sil </a>
							</td>
						</tr>




					}
				</tbody>
			</table>
		</div>

	</div>
</div>
