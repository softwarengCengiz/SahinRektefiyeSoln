@model SahinRektefiyeSoln.Models.Users

@{
	ViewBag.Title = "Kullanıcı Düzenle";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Styles/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui.js"></script>

<style>
	table {
		font-size: 1em;
	}

	.ui-draggable, .ui-droppable {
		background-position: top;
	}
</style>

<script>
	$(document).ready(function () {
		var result = '@ViewBag.Result';
		if (result==1 || result ==null ) {
			$('#UserName').val('');
			$('#FirstName').val('');
			$('#SurName').val('');
			$('#PhoneNumber').val('');

		}

		$.widget("custom.combobox", {
			_create: function () {
				this.wrapper = $("<span>")
					//.addClass("custom-combobox")
					.css({ 'position': 'relative' })
					.css({ 'width': "auto!important" })
					.insertAfter(this.element);

				this.element.hide();
				this._createAutocomplete();
				this._createShowAllButton();
			},

			_createAutocomplete: function () {
				var selected = this.element.children(":selected"),
					value = selected.val() ? selected.text() : "";

				this.input = $("<input>")
					.appendTo(this.wrapper)
					.val(value)
					.attr("title", "")
					//.addClass("custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left")
					.addClass("w3-select w3-border w3-round w3-padding")
					.autocomplete({
						delay: 0,
						minLength: 0,
						source: $.proxy(this, "_source")
					})
					.tooltip({
						classes: {
							"ui-tooltip": "ui-state-highlight"
						}
					});

				this._on(this.input, {
					autocompleteselect: function (event, ui) {
						ui.item.option.selected = true;
						this._trigger("select", event, {
							item: ui.item.option
						});
					},

					autocompletechange: "_removeIfInvalid"
				});
			},

			_createShowAllButton: function () {
				var input = this.input,
					wasOpen = false;

				$("<a>")
					.attr("tabIndex", -1)
					.attr("title", "Tümünü Göster")
					.tooltip()
					.appendTo(this.wrapper)
					.button({
						icons: {
							primary: "ui-icon-triangle-1-s"
						},
						text: false
					})
					.css('margin-right', 3)
					.removeClass("ui-button ui-corner-all ui-widget ui-button-icon-only ")
					//.addClass("custom-combobox-toggle ui-corner-right")
					.addClass("w3-display-right")
					.on("mousedown", function () {
						wasOpen = input.autocomplete("widget").is(":visible");
					})
					.on("click", function () {
						input.trigger("focus");

						// Close if already visible
						if (wasOpen) {
							return;
						}

						// Pass empty string as value to search for, displaying all results
						input.autocomplete("search", "");
					});
			},

			_source: function (request, response) {
				var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
				response(this.element.children("option").map(function () {
					var text = $(this).text();
					if (this.value && (!request.term || matcher.test(text)))
						return {
							label: text,
							value: text,
							option: this
						};
				}));
			},

			_removeIfInvalid: function (event, ui) {

				// Selected an item, nothing to do
				if (ui.item) {
					return;
				}

				// Search for a match (case-insensitive)
				var value = this.input.val(),
					valueLowerCase = value.toLowerCase(),
					valid = false;
				this.element.children("option").each(function () {
					if ($(this).text().toLowerCase() === valueLowerCase) {
						this.selected = valid = true;
						return false;
					}
				});

				// Found a match, nothing to do
				if (valid) {
					return;
				}

				// Remove invalid value
				this.input
					.val("")
					.attr("title", value + " seçilmedi.")
					.tooltip("open");
				this.element.val("");
				this._delay(function () {
					this.input.tooltip("close").attr("title", "");
				}, 2500);
				this.input.autocomplete("instance").term = "";
			},

			_destroy: function () {
				this.wrapper.remove();
				this.element.show();
			}
		});

		$("#ServiceId").combobox({
			select: function (event, ui) {

				$('#ServiceId').val(ui.item.value);
				$('#ServiceId').trigger("change");
			}
		});
		$("#toggle").on("click", function () {
			$("#ServiceId").toggle();
		});
	});
</script>
@Html.Action("SetPageHeader", "Admin", new { pageTitle = "Kullanıcı Düzenle", pagePermission = "ADM_00" })
<div class="w3-panel">
	<div class="w3-row-padding w3-card">
		@using (Html.BeginForm())
		{
			@Html.AntiForgeryToken()
        <div class="w3-row">
            <div class="w3-quarter w3-padding">
                <label>Kullanıcı Adı</label>
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", autocomplete = "off", disabled = "true" } })
            </div>
            <div class="w3-quarter w3-padding">
                <label>Adı</label>
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", autocomplete = "off" } })
            </div>
            <div class="w3-quarter w3-padding">
                <label>Soyad</label>
                @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", autocomplete = "off" } })
            </div>
            <div class="w3-quarter w3-padding">
                <label>Telefon Numarası</label>
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "w3-input w3-border w3-round  phone ", autocomplete = "off" } })
            </div>
            <div class="w3-quarter w3-padding">
                <label>Kullanıcı Rolü</label>
                @Html.DropDownList("RoleId", (SelectList)ViewBag.Roles, htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "RoleId" })
            </div>
        </div>
			<hr />
			<div class="w3-row">
				<div class="w3-quarter">
					<a href="/Admin/Users" class="w3-btn w3-ripple w3-blue"><i class="fa fa-arrow-left"></i>&nbsp;Geri </a>
				</div>
				<div class="w3-quarter">&nbsp</div>
				<div class="w3-quarter w3-padding">

				</div>
				<div class="w3-quarter  w3-padding">
					<button class="w3-btn w3-ripple w3-green w3-right">Güncelle</button>
					@*<input type="submit" value="Create" class="btn btn-default" />*@
				</div>
			</div>
		}
	</div>
</div>


